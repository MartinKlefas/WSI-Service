stages:
- static_analysis
- test
- build_docker
- trigger

run_static_analysis:
    stage: static_analysis
    tags:
        - mevis-ubuntu-vm
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    before_script:
        - poetry install
    script:
        - poetry run black . --check
        - poetry run isort . --check --profile black
        - poetry run pylint wsi_service --disable=all --enable=F,E,unreachable,duplicate-key,unnecessary-semicolon,global-variable-not-assigned,unused-variable,binary-op-exception,bad-format-string,anomalous-backslash-in-string,bad-open-mode --extension-pkg-whitelist=pydantic --disable=F0401 --disable=E1136

run_test:
    stage: test
    tags:
        - mevis-ubuntu-vm
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    before_script:
        - poetry install
    script:
        - poetry run pytest wsi_service/tests --cov .

run_test_docker:
    stage: test
    tags:
        - mevis-ubuntu-vm
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    before_script:
        - docker build . -t wsi_service_test
    script:
        - docker run --rm -v /data:/data --entrypoint=""  wsi_service_test bash -c "pip3 install -r requirements_dev.txt && pytest"

run_build_docker:
    stage: build_docker
    only:
        - master
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    tags:
        - asprunner    
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    script:
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"gitlab-ci-token\",\"password\":\"$CI_JOB_TOKEN\"}}}" > /kaniko/.docker/config.json
        - export BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE --label org.opencontainers.image.created=$BUILD_TIME --label org.opencontainers.image.authors="EMPAIA" --label org.opencontainers.image.vendor="EMPAIA" --label org.opencontainers.image.version=$CI_COMMIT_TAG --label org.opencontainers.image.source=$CI_PROJECT_URL --label org.opencontainers.image.revision=$CI_COMMIT_SHA --label org.opencontainers.image.title="WSI Service" --label org.opencontainers.image.description="WSI-Service to stream whole slide images tile-based via HTTP"

trigger_mds:
    stage: trigger
    only:
        - master
    tags:
        - mevis-ubuntu-vm
    script:
        - curl --request POST --form "token=$CI_JOB_TOKEN" --form ref=master https://gitlab.cc-asp.fraunhofer.de/api/v4/projects/15266/trigger/pipeline
