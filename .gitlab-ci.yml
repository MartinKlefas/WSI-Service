stages:
- build
- test
    
build_docker_image:
    stage: build
    only:
    - master
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    tags:
    - asprunner    
    script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"gitlab-ci-token\",\"password\":\"$CI_JOB_TOKEN\"}}}" > /kaniko/.docker/config.json
    - export BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:latest --label org.opencontainers.image.created=$BUILD_TIME --label org.opencontainers.image.authors="Fraunhofer MEVIS" --label org.opencontainers.image.vendor="Fraunhofer MEVIS" --label org.opencontainers.image.version=$CI_COMMIT_TAG --label org.opencontainers.image.source=$CI_PROJECT_URL --label org.opencontainers.image.revision=$CI_COMMIT_SHA --label org.opencontainers.image.title="WSI-Service" --label org.opencontainers.image.description="WSI-Service to stream whole slide images tile-based via HTTP"

run_tests:
    stage: test
    only:
    - master
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    tags:
    - asprunner    
    script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"gitlab-ci-token\",\"password\":\"$CI_JOB_TOKEN\"}}}" > /kaniko/.docker/config.json
    - docker pull $CI_REGISTRY_IMAGE
    - docker run -it --rm --entrypoint python3 $CI_REGISTRY_IMAGE -m pytest --pyargs wsi_service
