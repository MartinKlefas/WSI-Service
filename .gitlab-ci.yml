include:
  - project: "empaia/integration/ci-templates"
    ref: "main"
    file:
      - "pipeline-templates/pipeline-poetry-standard.yml"
      - "job-templates/docker-init.yml"
      - "job-templates/poetry-codecheck.yml"

variables:
  TITLE: "WSIS"
  DESCRIPTION: "Whole Slide Image Service (WSIS)"
  DIRECTORY: "wsi_service"
  TEST_DIRECTORY: "wsi_service/tests"
  RUNNER_TAG: "empaia-parallel"
  RUNNER_DOCKER_TAG: "empaia-docker"
  HOST_PORT: 8080
  CONTAINER_PORT: 8080
  DOCKER_RUN_ALIVE_TEST: "true"

poetry-codecheck-plugins:
  extends: .poetry-codecheck
  variables:
    DIRECTORY: "wsi_service_base_plugins"

docker-based-pytest:
  extends: .docker-init
  tags:
    - empaia-docker
    - testdata
  before_script:
    - !reference [.docker-init, before_script]
    - cp wsi_service/tests/integration/env_tests .env
    - docker-compose -f docker-compose.yml -f docker-compose.ci.yml up --build -d
    - sleep 10
  script:
    - docker exec wsi-service_wsi_service_1 poetry run pytest --cov wsi_service
  after_script:
    - docker exec wsi-service_wsi_service_1 rm -r .pytest_cache
    - docker-compose -f docker-compose.yml -f docker-compose.ci.yml down
    - !reference [.docker-init, after_script]

docker-based-pytest-storage-mapper:
  extends: .docker-init
  tags:
    - empaia-docker
    - testdata
  before_script:
    - !reference [.docker-init, before_script]
    - cp wsi_service/tests/integration/env_tests .env
    - docker-compose -f docker-compose.storage-mapper-service.yml -f docker-compose.ci.yml up --build -d
    - sleep 10
  script:
    - docker exec wsi-service_wsi_service_1 poetry run pytest -k test_real_storage_mapper_with_wsi_service
  after_script:
    - docker exec wsi-service_wsi_service_1 rm -r .pytest_cache
    - docker-compose -f docker-compose.storage-mapper-service.yml -f docker-compose.ci.yml down
    - !reference [.docker-init, after_script]

docker-build-and-push:
  needs:
    - !reference [.docker-build-and-push-default-needs, needs]
    - job: poetry-codecheck-plugins
    - job: docker-based-pytest
    - job: docker-based-pytest-storage-mapper

python-package-release:
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  image: registry.gitlab.com/empaia/integration/ci-docker-images/test-runner
  script:
    - poetry build
    - cd wsi_service_base_plugins/openslide && poetry build && cp dist/*.whl ../../dist/ && cd ../../
    - cd wsi_service_base_plugins/pil && poetry build && cp dist/*.whl ../../dist/ && cd ../../
    - cd wsi_service_base_plugins/tifffile && poetry build && cp dist/*.whl ../../dist/ && cd ../../
    - cd wsi_service_base_plugins/tiffslide && poetry build && cp dist/*.whl ../../dist/ && cd ../../
    - cd wsi_service_base_plugins/wsidicom && poetry build && cp dist/*.whl ../../dist/ && cd ../../
    - pip3 install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python3 -m twine upload  --skip-existing --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/wsi_service*.whl
  needs:
    - !reference [.docker-build-and-push-default-needs, needs]
    - job: poetry-codecheck-plugins
    - job: docker-based-pytest
    - job: docker-based-pytest-storage-mapper
