stages:
  - static_analysis
  - test
  - version
  - build_docker

run_static_analysis:
  stage: static_analysis
  tags:
    - mevis-ubuntu-vm-wsi
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - poetry install
  script:
    - poetry run black . --check
    - poetry run isort . --check --profile black
    - poetry run pylint wsi_service --disable=all --enable=F,E,unreachable,duplicate-key,unnecessary-semicolon,global-variable-not-assigned,unused-variable,binary-op-exception,bad-format-string,anomalous-backslash-in-string,bad-open-mode --extension-pkg-whitelist=pydantic --disable=F0401 --disable=E1136

run_tests:
  stage: test
  tags:
    - mevis-ubuntu-vm-wsi
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    PYTHONDONTWRITEBYTECODE: 1
  before_script:
    - cp wsi_service/tests/integration/env_tests .env
    - mkdir -p $(pwd)/wsi-service/tests/data/OpenSlide_adapted
    - chmod -R 777 $(pwd)/wsi-service/tests/data/OpenSlide_adapted
    - poetry install
    - cd wsi_service/loader_plugins/deformation_plugin/
    - wget $DEFORMATION_BINARY_URL -O deformation-plugin-linux.zip
    - unzip deformation-plugin-linux.zip
    - docker-compose build
  script:
    - poetry run pytest wsi_service/tests --cov .
  after_script:
    - docker-compose down
    - docker system prune -a -f

version:
  stage: version
  tags:
    - mevis-ubuntu-vm-wsi
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - VERSION=$(poetry version --short)
    - ./check_existing_docker.sh $CI_REGISTRY_IMAGE:$VERSION
    - echo "VERSION=$VERSION" >> version.env
  after_script:
    - docker logout $CI_REGISTRY
  artifacts:
    reports:
      dotenv: version.env

run_build_isyntax:
  stage: build_docker
  only:
    - master
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  tags:
    - asprunner
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"gitlab-ci-token\",\"password\":\"$CI_JOB_TOKEN\"}}}" > /kaniko/.docker/config.json
    - export BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
    - /kaniko/executor --context $CI_PROJECT_DIR/wsi_service/loader_plugins/isyntax --dockerfile $CI_PROJECT_DIR/wsi_service/loader_plugins/isyntax/Dockerfile --destination $CI_REGISTRY_IMAGE/isyntax --destination $CI_REGISTRY_IMAGE/isyntax:$VERSION --label org.opencontainers.image.created=$BUILD_TIME --label org.opencontainers.image.authors="EMPAIA" --label org.opencontainers.image.version=isyntax-$VERSION --label org.opencontainers.image.vendor="EMPAIA" --label org.opencontainers.image.version=$CI_COMMIT_TAG --label org.opencontainers.image.source=$CI_PROJECT_URL --label org.opencontainers.image.revision=$CI_COMMIT_SHA --label org.opencontainers.image.title="Isyntax backend" --label org.opencontainers.image.description="Backend service to open and load iysntax file format"
  needs:
    - job: version
      artifacts: true

run_build_wsi_service:
  stage: build_docker
  only:
    - master
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  tags:
    - asprunner
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"gitlab-ci-token\",\"password\":\"$CI_JOB_TOKEN\"}}}" > /kaniko/.docker/config.json
    - export BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE --destination $CI_REGISTRY_IMAGE:$VERSION --label org.opencontainers.image.created=$BUILD_TIME --label org.opencontainers.image.authors="EMPAIA" --label org.opencontainers.image.version=$VERSION --label org.opencontainers.image.vendor="EMPAIA" --label org.opencontainers.image.version=$CI_COMMIT_TAG --label org.opencontainers.image.source=$CI_PROJECT_URL --label org.opencontainers.image.revision=$CI_COMMIT_SHA --label org.opencontainers.image.title="WSI Service" --label org.opencontainers.image.description="WSI-Service to stream whole slide images tile-based via HTTP"
  needs:
    - job: version
      artifacts: true
