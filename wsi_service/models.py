from typing import List

from pydantic import BaseModel, Field


class Extent(BaseModel):
    x: int = Field(..., description="Extent x in horizontal direction")
    y: int = Field(..., description="Extent y in vertical direction")


class PixelSizeNm(BaseModel):
    x: float = Field(
        ...,
        description="Pixel size x in horizontal direction in nm (finest level, level=0)",
    )
    y: float = Field(
        ...,
        description="Pixel size y in vertical direction in nm (finest level, level=0)",
    )


class Level(BaseModel):
    extent: Extent = Field(..., description="Image extent for this level")
    downsample_factor: float = Field(
        ..., description="Downsample factor for this level"
    )
    generated: bool = Field(..., description="Level generated by WSI Service")


class SlideInfo(BaseModel):
    extent: Extent = Field(..., description="Image extent (finest level, level=0)")
    num_levels: int = Field(..., description="Number of levels in image pyramid")
    pixel_size_nm: PixelSizeNm = Field(
        ..., description="Pixel size in nm  (finest level, level=0)"
    )
    tile_extent: Extent = Field(..., description="Tile extent")
    levels: List[Level]


class StorageAddress(BaseModel):
    storage_address_id: str
    slide_id: str
    address: str
    main_address: bool


class SlideStorage(BaseModel):
    slide_id: str
    storage_type: str
    storage_addresses: List[StorageAddress]


class SlideLocalMapper(BaseModel):
    slide_id: str
    local_slide_id: str
    slide_storage: SlideStorage


class CaseLocalMapper(BaseModel):
    case_id: str
    local_case_id: str
    slides: List[str]
